{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\tutorial1\\\\Back-end_Projeto-Integrador-main\\\\src\\\\components\\\\Header.js\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport API from '../axios/Api';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport CurrencyInputField from 'react-currency-input-field';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction Header() {\n  const [show, setShow] = useState(false);\n  const [formData, setFormData] = useState({\n    num_docto: '',\n    fornecedor: '',\n    dt_lancamento: '',\n    dt_vencimento: '',\n    valor: '',\n    observacao: '',\n    situacao: ''\n  });\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const isValidDate = date => {\n    // Verifica se a data é um objeto do tipo Date\n    if (!(date instanceof Date)) return false; // Extrai o ano, mês e dia da data\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate(); // Verifica se o ano está no intervalo esperado (pode ser ajustado conforme necessário)\n\n    if (year < 1900 || year > 2100) return false; // Verifica se o mês está no intervalo de 1 a 12\n\n    if (month < 1 || month > 12) return false; // Verifica se o dia está no intervalo válido para o mês\n\n    const lastDayOfMonth = new Date(year, month, 0).getDate();\n    if (day < 1 || day > lastDayOfMonth) return false; // A data é válida\n\n    return true;\n  };\n\n  const handleDateChange = (name, date) => {\n    if (isValidDate(date)) {\n      if (name === 'dt_lancamento') {\n        setStartDate(date);\n      } else if (name === 'dt_vencimento') {\n        setEndDate(date);\n      }\n    } else {\n      console.log('Data inválida');\n    }\n  };\n\n  const verificarSituacao = () => {\n    const now = new Date();\n    const formattedEndDate = endDate ? new Date(endDate) : null;\n\n    if (formattedEndDate && formattedEndDate <= now) {\n      return 'Vencido';\n    } else {\n      return 'Aberto';\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const situacao = verificarSituacao();\n    const formattedData = { ...formData,\n      dt_lancamento: startDate ? startDate.toISOString().split('T')[0] : '',\n      dt_vencimento: endDate ? endDate.toISOString().split('T')[0] : '',\n      situacao: situacao\n    };\n\n    try {\n      const response = await API.post('/addmhs.php', formattedData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response.data);\n      handleClose();\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"navbar-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Teste do Marcus\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleShow,\n    className: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Adicionar\"))), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Adicionar Cadastro\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"link\",\n    className: \"close-btn\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    className: \"fa-icon-xmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"num_docto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Numero do Documento \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"num_docto\",\n    value: formData.num_docto,\n    onChange: handleChange,\n    placeholder: \"001\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"fornecedor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Fornecedor \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 28\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"fornecedor\",\n    value: formData.fornecedor,\n    onChange: handleChange,\n    placeholder: \"Fornecedor\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"dt_lancamento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Data de Emiss\\xE3o \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"form-control\",\n    selected: startDate,\n    onChange: date => handleDateChange('dt_lancamento', date),\n    dateFormat: \"yyyy-MM-dd\",\n    placeholderText: \"Selecione a data\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"dt_vencimento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"Data de Vencimento \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 36\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"form-control\",\n    selected: endDate,\n    onChange: date => handleDateChange('dt_vencimento', date),\n    dateFormat: \"yyyy-MM-dd\",\n    placeholderText: \"Selecione a data\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"valor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Valor \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(CurrencyInputField, {\n    className: \"form-valor\",\n    prefix: \"R$\",\n    decimalSeparator: \".\",\n    groupSeparator: \",\",\n    decimalScale: 2,\n    value: formData.valor,\n    onValueChange: value => setFormData({ ...formData,\n      valor: value\n    }),\n    placeholder: \"0.00\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"observacao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \"Observacao\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"observacao\",\n    value: formData.observacao,\n    onChange: handleChange,\n    placeholder: \"Observa\\xE7\\xE3o (opcional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"custom-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"Criar novo\"))))));\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/tutorial1/Back-end_Projeto-Integrador-main/src/components/Header.js"],"names":["React","useState","Button","Modal","Form","API","CurrencyInputField","FontAwesomeIcon","faTimes","DatePicker","Header","show","setShow","formData","setFormData","num_docto","fornecedor","dt_lancamento","dt_vencimento","valor","observacao","situacao","startDate","setStartDate","endDate","setEndDate","handleClose","handleShow","handleChange","e","name","value","target","isValidDate","date","Date","year","getFullYear","month","getMonth","day","getDate","lastDayOfMonth","handleDateChange","console","log","verificarSituacao","now","formattedEndDate","handleSubmit","event","preventDefault","formattedData","toISOString","split","response","post","headers","data","window","location","reload","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport API from '../axios/Api';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport CurrencyInputField from 'react-currency-input-field';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction Header() {\n  const [show, setShow] = useState(false);\n  const [formData, setFormData] = useState({\n    num_docto: '',\n    fornecedor: '',\n    dt_lancamento: '',\n    dt_vencimento: '',\n    valor: '',\n    observacao: '',\n    situacao: ''\n  });\n\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const isValidDate = (date) => {\n    // Verifica se a data é um objeto do tipo Date\n    if (!(date instanceof Date)) return false;\n\n    // Extrai o ano, mês e dia da data\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n\n    // Verifica se o ano está no intervalo esperado (pode ser ajustado conforme necessário)\n    if (year < 1900 || year > 2100) return false;\n\n    // Verifica se o mês está no intervalo de 1 a 12\n    if (month < 1 || month > 12) return false;\n\n    // Verifica se o dia está no intervalo válido para o mês\n    const lastDayOfMonth = new Date(year, month, 0).getDate();\n    if (day < 1 || day > lastDayOfMonth) return false;\n\n    // A data é válida\n    return true;\n  };\n\n  const handleDateChange = (name, date) => {\n    if (isValidDate(date)) {\n      if (name === 'dt_lancamento') {\n        setStartDate(date);\n      } else if (name === 'dt_vencimento') {\n        setEndDate(date);\n      }\n    } else {\n      console.log('Data inválida');\n    }\n  };\n\n  const verificarSituacao = () => {\n    const now = new Date();\n    const formattedEndDate = endDate ? new Date(endDate) : null;\n      \n    if (formattedEndDate && formattedEndDate <= now) {\n      return 'Vencido';\n    } else {\n      return 'Aberto';\n    }\n  };\n  \n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const situacao = verificarSituacao();\n\n    const formattedData = {\n        ...formData,\n        dt_lancamento: startDate ? startDate.toISOString().split('T')[0] : '',\n        dt_vencimento: endDate ? endDate.toISOString().split('T')[0] : '',\n        situacao: situacao\n      };\n\n    try {\n      const response = await API.post('/addmhs.php', formattedData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      console.log(response.data);\n\n      handleClose();\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <p className=\"navbar-brand\">Teste do Marcus</p>\n\n        <li className=\"nav-item\">\n          <button onClick={handleShow} className=\"nav-link\">\n            Adicionar\n          </button>\n        </li>\n      </nav>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>Adicionar Cadastro</Modal.Title>\n          <Button variant=\"link\" className=\"close-btn\" onClick={handleClose}>\n            <FontAwesomeIcon icon={faTimes} className=\"fa-icon-xmark\" />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"num_docto\">\n              <Form.Label>\n                Numero do Documento <span className=\"required-add\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"num_docto\"\n                value={formData.num_docto}\n                onChange={handleChange}\n                placeholder=\"001\"\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"fornecedor\">\n              <Form.Label>\n                Fornecedor <span className=\"required-add\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"fornecedor\"\n                value={formData.fornecedor}\n                onChange={handleChange}\n                placeholder=\"Fornecedor\"\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"dt_lancamento\">\n              <Form.Label>\n                Data de Emissão <span className=\"required-add\">*</span>\n              </Form.Label>\n              <DatePicker\n                className=\"form-control\"\n                selected={startDate}\n                onChange={(date) => handleDateChange('dt_lancamento', date)}\n                dateFormat=\"yyyy-MM-dd\"\n                placeholderText=\"Selecione a data\"\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"dt_vencimento\">\n              <Form.Label>\n                Data de Vencimento <span className=\"required-add\">*</span>\n              </Form.Label>\n              <DatePicker\n                className=\"form-control\"\n                selected={endDate}\n                onChange={(date) => handleDateChange('dt_vencimento', date)}\n                dateFormat=\"yyyy-MM-dd\"\n                placeholderText=\"Selecione a data\"\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"valor\">\n              <Form.Label>\n                Valor <span className=\"required-add\">*</span>\n              </Form.Label>\n              <CurrencyInputField\n                className=\"form-valor\"\n                prefix=\"R$\"\n                decimalSeparator=\".\"\n                groupSeparator=\",\"\n                decimalScale={2}\n                value={formData.valor}\n                onValueChange={(value) => setFormData({ ...formData, valor: value })}\n                placeholder=\"0.00\"\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"observacao\">\n              <Form.Label>Observacao</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"observacao\"\n                value={formData.observacao}\n                onChange={handleChange}\n                placeholder=\"Observação (opcional)\"\n              />\n            </Form.Group>\n\n            <Modal.Footer className=\"custom-footer\">\n              <Button variant=\"primary\" type=\"submit\">\n                Criar novo\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}